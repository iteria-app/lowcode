import ts from "typescript";
import { PageComponent } from "../../react-components/react-component-helper";
import { DetailComponentDefinitionBase } from "../../../definition/detail-definition-core";
import GenerationContext from "../../context/context";
import { Entity, Property } from "../../entity";
import { WidgetContext } from "../../context/widget-context";
import { SourceLineCol } from "../../../../ast";
import { WidgetProperties, WidgetProperty } from "../../../interfaces";
import { ComponentGenerator } from "../../interfaces/generation-interfaces";
import { InputsMetadata } from "../../../definition/material-ui/inputsMetadata";
export default class MuiDetailGenerator implements ComponentGenerator {
    private _imports;
    private _context;
    private _entity;
    private _widgetContext;
    private _intlFormatter;
    private _dataPropertyName;
    constructor(generationContext: GenerationContext, entity: Entity, widgetContext?: WidgetContext);
    getFormWidgetProperties(position: SourceLineCol): Promise<WidgetProperties>;
    getFormWidgetPropertiesFromAst(ast: ts.SourceFile, position: SourceLineCol): WidgetProperties;
    setFormWidgetProperties(position: SourceLineCol, widgetProperties: WidgetProperties): Promise<string | undefined>;
    createObjectLiteral(property: any): ts.ObjectLiteralExpression;
    createAttributeForStringLiterals(initializer: ts.JsxExpression | ts.StringLiteral, inputProp: WidgetProperty): ts.StringLiteral;
    createAttributeForExpressions(initializer: ts.JsxExpression | ts.StringLiteral, inputProp: WidgetProperty): ts.JsxExpression;
    createAttributeForNumbers(expression: any, inputProp: WidgetProperty): ts.JsxExpression;
    createAttributeForBooleans(expression: any, inputProp: WidgetProperty): ts.JsxExpression;
    createAttributeForOtherExpression(expression: any): ts.JsxExpression;
    insertFormWidget(position: SourceLineCol, property: Property, index?: number): Promise<string>;
    findGridElement(parentNode: ts.Node, foundedElements: ts.JsxElement[]): void;
    findGridContainer(parentNode: ts.Node, foundedElements: ts.JsxElement[]): void;
    addNewGridElement(gridElements: ts.JsxElement[], gridContainer: ts.JsxElement, property: Property, ast: ts.SourceFile, index?: number): ts.SourceFile;
    private getInputStatementsForProperty;
    transformTemplateExpressions: (metadata: InputsMetadata, templateExpressionPlaceholders: {
        [key: string]: string;
    }) => string | undefined;
    private addNewField;
    private printSourceCode;
    private findGridDeclaration;
    getDetailDefinition(): DetailComponentDefinitionBase;
    generateComponent(): PageComponent | undefined;
    private createStatements;
    private createInputsForEntity;
    private createFormElement;
    private createCardElement;
    private createGridContainer;
    private createFormikWrapper;
    private createConstFunction;
    private createGridItemElement;
}
